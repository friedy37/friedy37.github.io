(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{413:function(s,a,n){"use strict";n.r(a);var e=n(4),t=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"p3、yaml-配置注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#p3、yaml-配置注入"}},[s._v("#")]),s._v(" P3、yaml 配置注入")]),s._v(" "),a("p",[s._v("yaml 语法学习")]),s._v(" "),a("h3",{attrs:{id:"_3-1、配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、配置文件"}},[s._v("#")]),s._v(" 3.1、配置文件")]),s._v(" "),a("p",[s._v("SpringBoot 使用一个全局的配置文件 ， 配置文件名称是固定的")]),s._v(" "),a("ul",[a("li",[s._v("application.properties")]),s._v(" "),a("li",[a("ul",[a("li",[s._v("语法结构 ：key=value")])])]),s._v(" "),a("li",[s._v("application.yml")]),s._v(" "),a("li",[a("ul",[a("li",[s._v("语法结构 ：key：空格 value")])])])]),s._v(" "),a("p",[a("strong",[s._v("配置文件的作用")]),s._v(" ：修改 SpringBoot 自动配置的默认值，因为 SpringBoot 在底层都给我们自动配置好了；")]),s._v(" "),a("p",[s._v("比如我们可以在配置文件中修改 Tomcat 默认启动的端口号！测试一下！")]),s._v(" "),a("ul",[a("li",[s._v("server.port=8081")])]),s._v(" "),a("h3",{attrs:{id:"_3-2、yaml-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、yaml-概述"}},[s._v("#")]),s._v(" 3.2、yaml 概述")]),s._v(" "),a("p",[s._v("YAML 是 “YAML Ain’t a Markup Language” （YAML 不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：“Yet Another Markup Language”（仍是一种标记语言）")]),s._v(" "),a("p",[a("strong",[s._v("这种语言以数据作为中心，而不是以标记语言为重点！")])]),s._v(" "),a("p",[s._v("以前的配置文件，大多数都是使用 xml 来配置；比如一个简单的端口配置，我们来对比下 yaml 和 xml")]),s._v(" "),a("p",[s._v("传统 xml 配置：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<server>\n    <port>8081<port>\n</server>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("yaml 配置：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("server：\n  prot: 8080\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_3-3、yaml-基础语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3、yaml-基础语法"}},[s._v("#")]),s._v(" 3.3、yaml 基础语法")]),s._v(" "),a("p",[s._v("说明：语法要求严格！")]),s._v(" "),a("p",[s._v("1、空格不能省略")]),s._v(" "),a("p",[s._v("2、以缩进来控制层级关系，只要是左边对齐的一列数据都是同一个层级的。")]),s._v(" "),a("p",[s._v("3、属性和值的大小写都是十分敏感的。")]),s._v(" "),a("p",[a("strong",[s._v("字面量：普通的值 [数字，布尔值，字符串]")])]),s._v(" "),a("p",[s._v("字面量直接写在后面就可以 ， 字符串默认不用加上双引号或者单引号；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("k: v\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("注意：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("“ ” 双引号，不会转义字符串里面的特殊字符 ， 特殊字符会作为本身想表示的意思；")]),s._v(" "),a("p",[s._v("比如 ：name: “kuang \\n shen” 输出 ：kuang 换行 shen")])]),s._v(" "),a("li",[a("p",[s._v("‘’ 单引号，会转义特殊字符 ， 特殊字符最终会变成和普通字符一样输出")]),s._v(" "),a("p",[s._v("比如 ：name: ‘kuang \\n shen’ 输出 ：kuang \\n shen")])])]),s._v(" "),a("p",[a("strong",[s._v("对象、Map（键值对）")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#对象、Map格式\nk: \n    v1:\n    v2:\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("在下一行来写对象的属性和值得关系，注意缩进；比如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("student:\n    name: qinjiang\n    age: 3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("行内写法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("student: {name: qinjiang,age: 3}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("数组（ List、set ）")])]),s._v(" "),a("p",[s._v("用 - 值表示数组中的一个元素, 比如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("pets:\n - cat\n - dog\n - pig\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("行内写法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("pets: [cat,dog,pig]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("修改 SpringBoot 的默认端口号")])]),s._v(" "),a("p",[s._v("配置文件中添加，端口号的参数，就可以切换端口；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("server:  \n  port: 8082\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("注入配置文件")]),s._v(" "),a("p",[s._v("yaml 文件更强大的地方在于，他可以给我们的实体类直接注入匹配值！")]),s._v(" "),a("h3",{attrs:{id:"_3-4、yaml-注入配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4、yaml-注入配置文件"}},[s._v("#")]),s._v(" 3.4、yaml 注入配置文件")]),s._v(" "),a("p",[s._v("1、在 springboot 项目中的 resources 目录下新建一个文件 application.yml")]),s._v(" "),a("p",[s._v("2、编写一个实体类 Dog；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("package com.kuang.springboot.pojo;\n\n@Component  //注册bean到容器中\npublic class Dog {\n    private String name;\n    private Integer age;\n    \n    //有参无参构造、get、set方法、toString()方法  \n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("3、思考，我们原来是如何给 bean 注入属性值的！@Value，给狗狗类测试一下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@Component //注册bean\npublic class Dog {\n    @Value("阿黄")\n    private String name;\n    @Value("18")\n    private Integer age;\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("4、在 SpringBoot 的测试类下注入狗狗输出一下；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("@SpringBootTest\nclass DemoApplicationTests {\n\n    @Autowired //将狗狗自动注入进来\n    Dog dog;\n\n    @Test\n    public void contextLoads() {\n        System.out.println(dog); //打印看下狗狗对象\n    }\n\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("结果成功输出，@Value 注入成功，这是我们原来的办法对吧。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/90c7049a08847bca1d50462ab41c990c.png",alt:""}})]),s._v(" "),a("p",[s._v("5、我们在编写一个复杂一点的实体类：Person 类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("@Component //注册bean到容器中\npublic class Person {\n    private String name;\n    private Integer age;\n    private Boolean happy;\n    private Date birth;\n    private Map<String,Object> maps;\n    private List<Object> lists;\n    private Dog dog;\n    \n    //有参无参构造、get、set方法、toString()方法  \n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("6、我们来使用 yaml 配置的方式进行注入，大家写的时候注意区别和优势，我们编写一个 yaml 配置！")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("person:\n  name: qinjiang\n  age: 3\n  happy: false\n  birth: 2000/01/01\n  maps: {k1: v1,k2: v2}\n  lists:\n   - code\n   - girl\n   - music\n  dog:\n    name: 旺财\n    age: 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("7、我们刚才已经把 person 这个对象的所有值都写好了，我们现在来注入到我们的类中！")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('/*\n@ConfigurationProperties作用：\n将配置文件中配置的每一个属性的值，映射到这个组件中；\n告诉SpringBoot将本类中的所有属性和配置文件中相关的配置进行绑定\n参数 prefix = “person” : 将配置文件中的person下面的所有属性一一对应\n*/\n@Component //注册bean\n@ConfigurationProperties(prefix = "person")\npublic class Person {\n    private String name;\n    private Integer age;\n    private Boolean happy;\n    private Date birth;\n    private Map<String,Object> maps;\n    private List<Object> lists;\n    private Dog dog;\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("8、IDEA 提示，springboot 配置注解处理器没有找到，让我们看文档，我们可以查看文档，找到一个依赖！")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/1ba98f0770460027e7cbaaa76d99d65b.png",alt:""}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/26dbc3a32b218c8952785c13a4f3f8ac.png",alt:""}})]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\x3c!-- 导入配置文件处理器，配置文件进行绑定就会有提示，需要重启 --\x3e\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-configuration-processor</artifactId>\n  <optional>true</optional>\n</dependency>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("9、确认以上配置都 OK 之后，我们去测试类中测试一下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("@SpringBootTest\nclass DemoApplicationTests {\n\n    @Autowired\n    Person person; //将person自动注入进来\n\n    @Test\n    public void contextLoads() {\n        System.out.println(person); //打印person信息\n    }\n\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("结果：所有值全部注入成功！")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/da20b17ba44f22bef2fdc81662b3b25c.png",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("yaml 配置注入到实体类完全 OK！")])]),s._v(" "),a("p",[s._v("课堂测试：")]),s._v(" "),a("p",[s._v("1、将配置文件的 key 值 和 属性的值设置为不一样，则结果输出为 null，注入失败")]),s._v(" "),a("p",[s._v("2、在配置一个 person2，然后将 @ConfigurationProperties(prefix = “person2”) 指向我们的 person2；")]),s._v(" "),a("h3",{attrs:{id:"_3-5、加载指定的配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5、加载指定的配置文件"}},[s._v("#")]),s._v(" 3.5、加载指定的配置文件")]),s._v(" "),a("p",[a("strong",[s._v("@PropertySource ：")]),s._v(" 加载指定的配置文件；")]),s._v(" "),a("p",[a("strong",[s._v("@configurationProperties")]),s._v("：默认从全局配置文件中获取值；")]),s._v(" "),a("p",[s._v("1、我们去在 resources 目录下新建一个 "),a("strong",[s._v("person.properties")]),s._v(" 文件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("name=kuangshen\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("2、然后在我们的代码中指定加载 person.properties 文件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@PropertySource(value = "classpath:person.properties")\n@Component //注册bean\npublic class Person {\n\n    @Value("${name}")\n    private String name;\n\n    ......  \n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("3、再次输出测试一下：指定配置文件绑定成功！")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/04d910e74f300da2f8eab727983f7974.png",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"_3-6、配置文件占位符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6、配置文件占位符"}},[s._v("#")]),s._v(" 3.6、配置文件占位符")]),s._v(" "),a("p",[s._v("配置文件还可以编写占位符生成随机数")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("person:\n    name: qinjiang${random.uuid} # 随机uuid\n    age: ${random.int}  # 随机int\n    happy: false\n    birth: 2000/01/01\n    maps: {k1: v1,k2: v2}\n    lists:\n      - code\n      - girl\n      - music\n    dog:\n      name: ${person.hello:other}_旺财\n      age: 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"_3-7、回顾-properties-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-7、回顾-properties-配置"}},[s._v("#")]),s._v(" 3.7、回顾 properties 配置")]),s._v(" "),a("p",[s._v("我们上面采用的 yaml 方法都是最简单的方式，开发中最常用的；也是 springboot 所推荐的！那我们来唠唠其他的实现方式，道理都是相同的；写还是那样写；配置文件除了 yml 还有我们之前常用的 properties ， 我们没有讲，我们来唠唠！")]),s._v(" "),a("p",[s._v("【注意】properties 配置文件在写中文的时候，会有乱码 ， 我们需要去 IDEA 中设置编码格式为 UTF-8；")]),s._v(" "),a("p",[s._v("settings–>FileEncodings 中配置；")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/30e3569276787d7265d754be2fa9f816.png",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("测试步骤：")])]),s._v(" "),a("p",[s._v("1、新建一个实体类 User")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("@Component //注册bean\npublic class User {\n    private String name;\n    private int age;\n    private String sex;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("2、编辑配置文件 user.properties")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("user1.name=kuangshen\nuser1.age=18user1.sex=男\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("3、我们在 User 类上使用 @Value 来进行注入！")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@Component //注册bean\n@PropertySource(value = "classpath:user.properties")\npublic class User {\n    //直接使用@value\n    @Value("${user.name}") //从配置文件中取值\n    private String name;\n    @Value("#{9*2}")  // #{SPEL} Spring表达式\n    private int age;\n    @Value("男")  // 字面量\n    private String sex;\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("4、Springboot 测试")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("user1.name=kuangshen\nuser1.age=18\nuser1.sex=男\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("结果正常输出：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/3cfb4bba9a6481e71fbe8f971bd490da.png",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"_3-8、对比小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-8、对比小结"}},[s._v("#")]),s._v(" 3.8、对比小结")]),s._v(" "),a("p",[s._v("@Value 这个使用起来并不友好！我们需要为每个属性单独注解赋值，比较麻烦；我们来看个功能对比图")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/8526e91e323c9052be6228b354b4328f.png",alt:""}})]),s._v(" "),a("p",[s._v("1、@ConfigurationProperties 只需要写一次即可 ， @Value 则需要每个字段都添加")]),s._v(" "),a("p",[s._v("2、松散绑定：这个什么意思呢? 比如我的 yml 中写的 last-name，这个和 lastName 是一样的， - 后面跟着的字母默认是大写的。这就是松散绑定。可以测试一下")]),s._v(" "),a("p",[s._v("3、"),a("a",{attrs:{href:"https://so.csdn.net/so/search?q=JSR303&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[s._v("JSR303"),a("OutboundLink")],1),s._v(" 数据校验 ， 这个就是我们可以在字段是增加一层过滤器验证 ， 可以保证数据的合法性")]),s._v(" "),a("p",[s._v("4、复杂类型封装，yml 中可以封装对象 ， 使用 value 就不支持")]),s._v(" "),a("p",[a("strong",[s._v("结论：")])]),s._v(" "),a("p",[s._v("配置 yml 和配置 properties 都可以获取到值 ， 强烈推荐 yml；")]),s._v(" "),a("p",[s._v("如果我们在某个业务中，只需要获取配置文件中的某个值，可以使用一下 @value；")]),s._v(" "),a("p",[s._v("如果说，我们专门编写了一个 JavaBean 来和配置文件进行一一映射，就直接 @configurationProperties，不要犹豫！")])])}),[],!1,null,null,null);a.default=t.exports}}]);