(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{403:function(s,a,n){"use strict";n.r(a);var e=n(4),t=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"p4、数据校验及多环境切换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#p4、数据校验及多环境切换"}},[s._v("#")]),s._v(" P4、数据校验及多环境切换")]),s._v(" "),a("h3",{attrs:{id:"_4-1、数据校验先看看如何使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1、数据校验先看看如何使用"}},[s._v("#")]),s._v(" 4.1、数据校验先看看如何使用")]),s._v(" "),a("p",[s._v("Springboot 中可以用 @validated 来校验数据，如果数据异常则会统一抛出异常，方便异常中心统一处理。我们这里来写个注解让我们的 name 只能支持 Email 格式；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@Component //注册bean\n@ConfigurationProperties(prefix = "person")\n@Validated  //数据校验\npublic class Person {\n\n    @Email(message="邮箱格式错误") //name必须是邮箱格式\n    private String name;\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("运行结果 ：default message [不是一个合法的电子邮件地址];")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/638fd0cbf0a7100a6c45b79730b43dbe.png",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("使用数据校验，可以保证数据的正确性；")])]),s._v(" "),a("h3",{attrs:{id:"_4-2、常见参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2、常见参数"}},[s._v("#")]),s._v(" 4.2、常见参数")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@NotNull(message="名字不能为空")\nprivate String userName;\n@Max(value=120,message="年龄最大不能查过120")\nprivate int age;\n@Email(message="邮箱格式错误")\nprivate String email;\n\n空检查\n@Null       验证对象是否为null\n@NotNull    验证对象是否不为null, 无法查检长度为0的字符串\n@NotBlank   检查约束字符串是不是Null还有被Trim的长度是否大于0,只对字符串,且会去掉前后空格.\n@NotEmpty   检查约束元素是否为NULL或者是EMPTY.\n    \nBooelan检查\n@AssertTrue     验证 Boolean 对象是否为 true  \n@AssertFalse    验证 Boolean 对象是否为 false  \n    \n长度检查\n@Size(min=, max=) 验证对象（Array,Collection,Map,String）长度是否在给定的范围之内  \n@Length(min=, max=) string is between min and max included.\n\n日期检查\n@Past       验证 Date 和 Calendar 对象是否在当前时间之前  \n@Future     验证 Date 和 Calendar 对象是否在当前时间之后  \n@Pattern    验证 String 对象是否符合正则表达式的规则\n\n.......等等\n除此以外，我们还可以自定义一些数据校验规则\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("p",[s._v("多环境切换")]),s._v(" "),a("p",[s._v("profile 是 Spring 对不同环境提供不同配置功能的支持，可以通过激活不同的环境版本，实现快速切换环境；")]),s._v(" "),a("h3",{attrs:{id:"_4-3、多配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3、多配置文件"}},[s._v("#")]),s._v(" 4.3、多配置文件")]),s._v(" "),a("p",[s._v("我们在主配置文件编写的时候，文件名可以是 application-{profile}.properties/yml , 用来指定多个环境版本；")]),s._v(" "),a("p",[a("strong",[s._v("例如：")])]),s._v(" "),a("p",[s._v("application-test.properties 代表测试环境配置")]),s._v(" "),a("p",[s._v("application-dev.properties 代表开发环境配置")]),s._v(" "),a("p",[s._v("但是 Springboot 并不会直接启动这些配置文件，它"),a("strong",[s._v("默认使用 application.properties 主配置文件")]),s._v("；")]),s._v(" "),a("p",[s._v("我们需要通过一个配置来选择需要激活的环境：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#比如在配置文件中指定使用dev环境，我们可以通过设置不同的端口号进行测试；\n#我们启动SpringBoot，就可以看到已经切换到dev下的配置了；\nspring.profiles.active=dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_4-4、yaml-的多文档块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4、yaml-的多文档块"}},[s._v("#")]),s._v(" 4.4、yaml 的多文档块")]),s._v(" "),a("p",[s._v("和 properties 配置文件中一样，但是使用 yml 去实现不需要创建多个配置文件，更加方便了 !")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("server:\n  port: 8081\n#选择要激活那个环境块\nspring:\n  profiles:\n    active: prod\n\n---\nserver:\n  port: 8083\nspring:\n  profiles: dev #配置环境的名称\n\n\n---\n\nserver:\n  port: 8084\nspring:\n  profiles: prod  #配置环境的名称\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[a("strong",[s._v("注意：如果 yml 和 properties 同时都配置了端口，并且没有激活其他环境 ， 默认会使用 properties 配置文件的！")])]),s._v(" "),a("h3",{attrs:{id:"_4-5、配置文件加载位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5、配置文件加载位置"}},[s._v("#")]),s._v(" 4.5、配置文件加载位置")]),s._v(" "),a("p",[a("strong",[s._v("外部加载配置文件的方式十分多，我们选择最常用的即可，在开发的资源文件中进行配置！")])]),s._v(" "),a("p",[s._v("官方外部配置文件说明参考文档")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/2c0d61df7e9e6ae8425c09887db366c5.png",alt:""}})]),s._v(" "),a("p",[s._v("springboot 启动会扫描以下位置的 application.properties 或者 application.yml 文件作为 Spring boot 的默认配置文件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("优先级1：项目路径下的config文件夹配置文件\n优先级2：项目路径下配置文件\n优先级3：资源路径下的config文件夹配置文件\n优先级4：资源路径下配置文件\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("优先级由高到底，高优先级的配置会覆盖低优先级的配置；")]),s._v(" "),a("p",[a("strong",[s._v("SpringBoot 会从这四个位置全部加载主配置文件；互补配置；")])]),s._v(" "),a("p",[s._v("我们在最低级的配置文件中设置一个项目访问路径的配置来测试互补问题；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#配置项目的访问路径\nserver.servlet.context-path=/kuang\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_4-6、拓展-运维小技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6、拓展-运维小技巧"}},[s._v("#")]),s._v(" 4.6、拓展，运维小技巧")]),s._v(" "),a("p",[s._v("指定位置加载配置文件")]),s._v(" "),a("p",[s._v("我们还可以通过 spring.config.location 来改变默认的配置文件位置")]),s._v(" "),a("p",[s._v("项目打包好以后，我们可以使用命令行参数的形式，启动项目的时候来指定配置文件的新位置；这种情况，一般是后期运维做的多，相同配置，外部指定的配置文件优先级最高")])])}),[],!1,null,null,null);a.default=t.exports}}]);