(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{412:function(n,s,a){"use strict";a.r(s);var e=a(4),t=Object(e.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h2",{attrs:{id:"p7、springboot-整合-jdbc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p7、springboot-整合-jdbc"}},[n._v("#")]),n._v(" P7、SpringBoot 整合 JDBC")]),n._v(" "),s("h3",{attrs:{id:"_7-1、springdata-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1、springdata-简介"}},[n._v("#")]),n._v(" 7.1、SpringData 简介")]),n._v(" "),s("p",[n._v("对于数据访问层，无论是 SQL(关系型数据库) 还是 NOSQL(非关系型数据库)，Spring Boot 底层都是采用 Spring Data 的方式进行统一处理。")]),n._v(" "),s("p",[n._v("Spring Boot 底层都是采用 Spring Data 的方式进行统一处理各种数据库，Spring Data 也是 Spring 中与 Spring Boot、Spring Cloud 等齐名的知名项目。")]),n._v(" "),s("p",[n._v("Sping Data 官网：https://spring.io/projects/spring-data")]),n._v(" "),s("p",[n._v("数据库相关的启动器 ：可以参考官方文档："),s("br"),n._v("\nhttps://docs.spring.io/spring-boot/docs/2.2.5.RELEASE/reference/htmlsingle/#using-boot-starter")]),n._v(" "),s("p",[n._v("整合 JDBC")]),n._v(" "),s("h3",{attrs:{id:"_7-2、创建测试项目测试数据源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2、创建测试项目测试数据源"}},[n._v("#")]),n._v(" 7.2、创建测试项目测试数据源")]),n._v(" "),s("p",[n._v("1、我去新建一个项目测试：springboot-data-jdbc ; 引入相应的模块！基础模块")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/60270d1872a1c413c5e1c656050472a8.png",alt:""}})]),n._v(" "),s("p",[n._v("2、项目建好之后，发现自动帮我们导入了如下的启动器")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-jdbc</artifactId>\n</dependency>\n<dependency>\n    <groupId>mysql</groupId>\n    <artifactId>mysql-connector-java</artifactId>\n    <scope>runtime</scope>\n</dependency>\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br")])]),s("p",[n._v("3、编写 yaml 配置文件连接数据库；")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("spring:\n  datasource:\n    username: root\n    password: 123456\n    #?serverTimezone=UTC解决时区的报错\n    url: jdbc:mysql://localhost:3306/springboot?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8\n    driver-class-name: com.mysql.cj.jdbc.Driver\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br")])]),s("p",[n._v("4、配置完这一些东西后，我们就可以直接去使用了，因为 SpringBoot 已经默认帮我们进行了自动配置；去测试类测试一下")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("@SpringBootTest\nclass SpringbootDataJdbcApplicationTests {\n\n    //DI注入数据源\n    @Autowired\n    DataSource dataSource;\n\n    @Test\n    public void contextLoads() throws SQLException {\n        //看一下默认数据源\n        System.out.println(dataSource.getClass());\n        //获得连接\n        Connection connection =   dataSource.getConnection();\n        System.out.println(connection);\n        //关闭连接\n        connection.close();\n    }\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br")])]),s("p",[n._v("结果：我们可以看到他默认给我们配置的数据源为 : class com.zaxxer.hikari.HikariDataSource ， 我们并没有手动配置")]),n._v(" "),s("p",[n._v("我们来全局搜索一下，找到数据源的所有自动配置都在 ：DataSourceAutoConfiguration 文件：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("@Import(\n    {Hikari.class, Tomcat.class, Dbcp2.class, Generic.class, DataSourceJmxConfiguration.class}\n)\nprotected static class PooledDataSourceConfiguration {\n    protected PooledDataSourceConfiguration() {\n    }\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br")])]),s("p",[n._v("这里导入的类都在 DataSourceConfiguration 配置类下，可以看出 Spring Boot 2.2.5 默认使用 HikariDataSource 数据源，而以前版本，如 Spring Boot 1.5 默认使用 org.apache.tomcat.jdbc.pool.DataSource 作为数据源；")]),n._v(" "),s("p",[s("strong",[n._v("HikariDataSource 号称 Java WEB 当前速度最快的数据源，相比于传统的 C3P0 、DBCP、Tomcat jdbc 等连接池更加优秀；")])]),n._v(" "),s("p",[s("strong",[n._v("可以使用 spring.datasource.type 指定自定义的数据源类型，值为 要使用的连接池实现的完全限定名。")])]),n._v(" "),s("p",[n._v("关于数据源我们并不做介绍，有了数据库连接，显然就可以 CRUD 操作数据库了。但是我们需要先了解一个对象 JdbcTemplate")]),n._v(" "),s("h3",{attrs:{id:"_7-3、jdbctemplate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-3、jdbctemplate"}},[n._v("#")]),n._v(" 7.3、JDBCTemplate")]),n._v(" "),s("p",[n._v("1、有了数据源 (com.zaxxer.hikari.HikariDataSource)，然后可以拿到数据库连接 (java.sql.Connection)，有了连接，就可以使用原生的 JDBC 语句来操作数据库；"),s("br"),n._v("\n2、即使不使用第三方第数据库操作框架，如 MyBatis 等，Spring 本身也对原生的 JDBC 做了轻量级的封装，即 JdbcTemplate。"),s("br"),n._v("\n3、数据库操作的所有 CRUD 方法都在 JdbcTemplate 中。"),s("br"),n._v("\n4、Spring Boot 不仅提供了默认的数据源，同时默认已经配置好了 JdbcTemplate 放在了容器中，程序员只需自己注入即可使用"),s("br"),n._v("\n5、JdbcTemplate 的自动配置是依赖 org.springframework.boot.autoconfigure.jdbc 包下的 JdbcTemplateConfiguration 类")]),n._v(" "),s("p",[s("strong",[n._v("JdbcTemplate 主要提供以下几类方法：")])]),n._v(" "),s("ul",[s("li",[n._v("execute 方法：可以用于执行任何 SQL 语句，一般用于执行 DDL 语句；")]),n._v(" "),s("li",[n._v("update 方法及 batchUpdate 方法：update 方法用于执行新增、修改、删除等语句；batchUpdate 方法用于执行批处理相关语句；")]),n._v(" "),s("li",[n._v("query 方法及 queryForXXX 方法：用于执行查询相关语句；")]),n._v(" "),s("li",[n._v("call 方法：用于执行存储过程、函数相关语句。")])]),n._v(" "),s("h3",{attrs:{id:"_7-4、测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-4、测试"}},[n._v("#")]),n._v(" 7.4、测试")]),n._v(" "),s("p",[n._v("编写一个 Controller，注入 jdbcTemplate，编写测试方法进行访问测试；")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('package com.kuang.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Map;\n\n@RestController\n@RequestMapping("/jdbc")\npublic class JdbcController {\n\n    /**\n     * Spring Boot 默认提供了数据源，默认提供了 org.springframework.jdbc.core.JdbcTemplate\n     * JdbcTemplate 中会自己注入数据源，用于简化 JDBC操作\n     * 还能避免一些常见的错误,使用起来也不用再自己来关闭数据库连接\n     */\n    @Autowired\n    JdbcTemplate jdbcTemplate;\n\n    //查询employee表中所有数据\n    //List 中的1个 Map 对应数据库的 1行数据\n    //Map 中的 key 对应数据库的字段名，value 对应数据库的字段值\n    @GetMapping("/list")\n    public List<Map<String, Object>> userList(){\n        String sql = "select * from employee";\n        List<Map<String, Object>> maps = jdbcTemplate.queryForList(sql);\n        return maps;\n    }\n    \n    //新增一个用户\n    @GetMapping("/add")\n    public String addUser(){\n        //插入语句，注意时间问题\n        String sql = "insert into employee(last_name, email,gender,department,birth)" +\n                " values (\'狂神说\',\'24736743@qq.com\',1,101,\'"+ new Date().toLocaleString() +"\')";\n        jdbcTemplate.update(sql);\n        //查询\n        return "addOk";\n    }\n\n    //修改用户信息\n    @GetMapping("/update/{id}")\n    public String updateUser(@PathVariable("id") int id){\n        //插入语句\n        String sql = "update employee set last_name=?,email=? where id="+id;\n        //数据\n        Object[] objects = new Object[2];\n        objects[0] = "秦疆";\n        objects[1] = "24736743@sina.com";\n        jdbcTemplate.update(sql,objects);\n        //查询\n        return "updateOk";\n    }\n\n    //删除用户\n    @GetMapping("/delete/{id}")\n    public String delUser(@PathVariable("id") int id){\n        //插入语句\n        String sql = "delete from employee where id=?";\n        jdbcTemplate.update(sql,id);\n        //查询\n        return "deleteOk";\n    }\n    \n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br"),s("span",{staticClass:"line-number"},[n._v("71")]),s("br")])]),s("p",[n._v("测试请求，结果正常；")]),n._v(" "),s("p",[n._v("到此，CURD 的基本操作，使用 JDBC 就搞定了。https://docs.spring.io/spring-boot/docs/2.0.4.RELEASE/reference/htmlsingle/#using-boot-starter)")]),n._v(" "),s("h3",{attrs:{id:"_7-5、原理探究"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-5、原理探究"}},[n._v("#")]),n._v(" 7.5、原理探究 ：")]),n._v(" "),s("p",[n._v("org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration 数据源配置类作用 ：根据逻辑判断之后，添加数据源；")]),n._v(" "),s("p",[s("strong",[n._v("SpringBoot 默认支持以下数据源：")])]),n._v(" "),s("p",[s("strong",[n._v("com.zaxxer.hikari.HikariDataSource （Spring Boot 2.0 以上，默认使用此数据源）")])]),n._v(" "),s("p",[n._v("org.apache.tomcat.jdbc.pool.DataSource"),s("br"),n._v("\norg.apache.commons.dbcp2.BasicDataSource")]),n._v(" "),s("p",[s("strong",[n._v("可以使用 spring.datasource.type 指定自定义的数据源类型，值为 要使用的连接池实现的完全限定名。默认情况下，它是从类路径自动检测的。")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('@Configuration\n    @ConditionalOnMissingBean({DataSource.class})\n    @ConditionalOnProperty(\n        name = {"spring.datasource.type"}\n    )\n    static class Generic {\n        Generic() {\n        }\n\n        @Bean\n        public DataSource dataSource(DataSourceProperties properties) {\n            return properties.initializeDataSourceBuilder().build();\n        }\n    }\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);