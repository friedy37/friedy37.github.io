{"remainingRequest":"/Users/ldq/friedyfriday/friedy37.github.io/node_modules/cache-loader/dist/cjs.js??ref--3-0!/Users/ldq/friedyfriday/friedy37.github.io/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/ldq/friedyfriday/friedy37.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/ldq/friedyfriday/friedy37.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ldq/friedyfriday/friedy37.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/ldq/friedyfriday/friedy37.github.io/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/ldq/friedyfriday/friedy37.github.io/docs/《SpringCloud》笔记/04.Feign负载均衡.md?vue&type=template&id=7742c992","dependencies":[{"path":"/Users/ldq/friedyfriday/friedy37.github.io/docs/《SpringCloud》笔记/04.Feign负载均衡.md","mtime":1732463623760},{"path":"/Users/ldq/friedyfriday/friedy37.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1732935728338},{"path":"/Users/ldq/friedyfriday/friedy37.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1732935728338},{"path":"/Users/ldq/friedyfriday/friedy37.github.io/node_modules/babel-loader/lib/index.js","mtime":1732935728397},{"path":"/Users/ldq/friedyfriday/friedy37.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1732935728689},{"path":"/Users/ldq/friedyfriday/friedy37.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1732935728338},{"path":"/Users/ldq/friedyfriday/friedy37.github.io/node_modules/vue-loader/lib/index.js","mtime":1732935728456},{"path":"/Users/ldq/friedyfriday/friedy37.github.io/node_modules/@vuepress/markdown-loader/index.js","mtime":1732935727821}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}