{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{419:function(e,s,a){\"use strict\";a.r(s);var n=a(4),r=Object(n.a)({},(function(){var e=this,s=e._self._c;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[s(\"h2\",{attrs:{id:\"_2-eureka-服务发现框架\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-eureka-服务发现框架\"}},[e._v(\"#\")]),e._v(\" 2.Eureka 服务发现框架\")]),e._v(\" \"),s(\"p\",[s(\"code\",[e._v(\"Eureka\")]),e._v(\"是\"),s(\"code\",[e._v(\"Netflix\")]),e._v(\"开发的\"),s(\"code\",[e._v(\"服务发现\")]),e._v(\"框架，本身是一个\"),s(\"code\",[e._v(\"基于REST的服务\")]),e._v(\"，主要用于定位运行在 AWS 域中的中间层服务，以达到服务发现和中间层服务故障转移的目的。功能类似于 Zookeeper。\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"_2-1-工作原理\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-工作原理\"}},[e._v(\"#\")]),e._v(\" 2.1 工作原理\")]),e._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/20210421134508128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjY1NzQ1,size_16,color_FFFFFF,t_70\",alt:\"\"}}),s(\"br\"),e._v(\"\\nEureka 采用了\"),s(\"code\",[e._v(\"C-S的架构设计\")]),e._v(\"，\"),s(\"code\",[e._v(\"EurekaServer\")]),e._v(\"是服务端，\"),s(\"code\",[e._v(\"Service Provider\")]),e._v(\"和\"),s(\"code\",[e._v(\"Service Consumer\")]),e._v(\"都是客户端。\")]),e._v(\" \"),s(\"p\",[e._v(\"Eureka Server 提供服务注册，各个节点启动后，会在 EurekaServer 中进行注册，这样 Eureka Server 中的服务注册表中将会储存所有课用服务节点的信息，服务节点的信息可以在界面中直观的看到。\")]),e._v(\" \"),s(\"p\",[e._v(\"Eureka Client 是一个 Java 客户端，用于简化 EurekaServer 的交互，客户端同时也具备一个内置的，使用轮询算法的负载均衡器。在应用启动后，将会向 EurekaServer 发送心跳 (默认周期为 30 秒) 。如果 Eureka Server 在多个心跳周期内没有接收到某个节点的心跳，EurekaServer 将会从服务注册表中把这个服务节点移除掉 (默认周期为 90s)。\")]),e._v(\" \"),s(\"p\",[s(\"strong\",[e._v(\"详细的 Eureka 可查看\")]),e._v(\"：\"),s(\"a\",{attrs:{href:\"https://blog.csdn.net/qwe86314/article/details/94552801\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"https://blog.csdn.net/qwe86314/article/details/94552801\"),s(\"OutboundLink\")],1)]),e._v(\" \"),s(\"h3\",{attrs:{id:\"_2-2-工作流程\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-工作流程\"}},[e._v(\"#\")]),e._v(\" 2.2 工作流程\")]),e._v(\" \"),s(\"p\",[e._v(\"1、\"),s(\"code\",[e._v(\"Eureka Server\")]),e._v(\" 启动成功，等待服务端注册。在启动过程中如果配置了集群，集群之间定时通过 \"),s(\"code\",[e._v(\"Replicate\")]),e._v(\"同步注册表，每个\"),s(\"code\",[e._v(\"Eureka Server\")]),e._v(\" 都存在独立完整的服务注册表信息\")]),e._v(\" \"),s(\"p\",[e._v(\"2、\"),s(\"code\",[e._v(\"Eureka Client\")]),e._v(\"启动时根据配置的\"),s(\"code\",[e._v(\"Eureka Server\")]),e._v(\" 地址去注册中心注册服务\")]),e._v(\" \"),s(\"p\",[e._v(\"3、\"),s(\"code\",[e._v(\"Eureka Client\")]),e._v(\" 会每 \"),s(\"code\",[e._v(\"30s\")]),e._v(\" 向 \"),s(\"code\",[e._v(\"Eureka Server\")]),e._v(\" 发送一次心跳请求，证明客户端服务正常\")]),e._v(\" \"),s(\"p\",[e._v(\"4、当 \"),s(\"code\",[e._v(\"Eureka Server 90s\")]),e._v(\"内没有收到 \"),s(\"code\",[e._v(\"Eureka Client\")]),e._v(\" 的心跳，注册中心则认为该节点失效，会注销该实例\")]),e._v(\" \"),s(\"p\",[e._v(\"5、单位时间内 \"),s(\"code\",[e._v(\"Eureka Server\")]),e._v(\" 统计到有大量的 \"),s(\"code\",[e._v(\"Eureka Client\")]),e._v(\"没有上送心跳，则认为可能为网络异常，进入自我保护机制，不再剔除没有送上心跳的客户端\")]),e._v(\" \"),s(\"p\",[e._v(\"6、当 \"),s(\"code\",[e._v(\"Eureka Client\")]),e._v(\"心跳请求恢复正常之后，\"),s(\"code\",[e._v(\"Eureka Server\")]),e._v(\" 自动退出自我保护模式\")]),e._v(\" \"),s(\"p\",[e._v(\"7、\"),s(\"code\",[e._v(\"Eureka Client\")]),e._v(\"定时全量或者增量从注册中心获取服务注册表，并且将获取到的信息缓存到本地\")]),e._v(\" \"),s(\"p\",[e._v(\"8、服务调用时，\"),s(\"code\",[e._v(\"Eureka Client\")]),e._v(\" 会先从本地缓存找寻调取的服务。如果获取不到，先从注册中心刷新注册表，再同步到本地缓存\")]),e._v(\" \"),s(\"p\",[e._v(\"9、\"),s(\"code\",[e._v(\"Eureka Client\")]),e._v(\"获取到目标服务器信息，发起服务调用\")]),e._v(\" \"),s(\"p\",[e._v(\"10、\"),s(\"code\",[e._v(\"Eureka Client\")]),e._v(\" 程序关闭时向 \"),s(\"code\",[e._v(\"Eureka Server\")]),e._v(\" 发送取消请求，\"),s(\"code\",[e._v(\"Eureka Server\")]),e._v(\" 将实例从注册表中删除\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"_2-3-springcloud-中使用\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3-springcloud-中使用\"}},[e._v(\"#\")]),e._v(\" 2.3 springcloud 中使用\")]),e._v(\" \"),s(\"p\",[s(\"strong\",[e._v(\"1. 创建 Eureka Server（springcloud-eureka-7001）\")])]),e._v(\" \"),s(\"p\",[e._v(\"pox.xml 中导入依赖\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"<dependencies>\\n    \\x3c!--导入Eureka Server依赖--\\x3e\\n    <dependency>\\n        <groupId>org.springframework.cloud</groupId>\\n        <artifactId>spring-cloud-starter-eureka-server</artifactId>\\n        <version>1.4.6.RELEASE</version>\\n    </dependency>\\n    \\x3c!--热部署工具--\\x3e\\n    <dependency>\\n        <groupId>org.springframework.boot</groupId>\\n        <artifactId>spring-boot-devtools</artifactId>\\n    </dependency>\\n</dependencies>\\n\")])]),e._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"13\")]),s(\"br\")])]),s(\"p\",[e._v(\"配置文件中配置，application.yml\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"server:\\n  port: 7001\\n\\n# Eureka配置\\neureka:\\n  instance:\\n    # Eureka服务端的实例名字（localhost，ip，域名）\\n    hostname: 127.0.0.1\\n  client:\\n    # 表示是否向 Eureka 注册中心注册自己，自己就是服务端，所有false\\n    register-with-eureka: false\\n    # fetch-registry如果为false,则表示自己为注册中心,客户端为 ture\\n    fetch-registry: false\\n    # Eureka监控页面\\n    service-url:\\n      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/\\n\")])]),e._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"15\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"16\")]),s(\"br\")])]),s(\"p\",[e._v(\"主启动类加注解开启 Eureka Server\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"@SpringBootApplication\\n// @EnableEurekaServer 开启EurekaServer，可以注册了\\n@EnableEurekaServer\\npublic class EurekaServer_7001 {\\n    public static void main(String[] args) {\\n        SpringApplication.run(EurekaServer_7001.class,args);\\n    }\\n}\\n\")])]),e._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"8\")]),s(\"br\")])]),s(\"p\",[e._v(\"启动成功后访问 http://localhost:7001/ 得到以下页面\"),s(\"br\"),e._v(\" \"),s(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/20210421140248188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjY1NzQ1,size_16,color_FFFFFF,t_70\",alt:\"\"}}),s(\"br\"),e._v(\" \"),s(\"strong\",[e._v(\"2. 创建 Eureka Client，修改之前的服务提供模块（springlouc-provider-dept-8001）\")]),s(\"br\"),e._v(\"\\npom.xml 导入 Eureka Client 依赖\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"\\x3c!--Eureka依赖--\\x3e\\n<dependency>\\n    <groupId>org.springframework.cloud</groupId>\\n    <artifactId>spring-cloud-starter-eureka</artifactId>\\n    <version>1.4.6.RELEASE</version>\\n</dependency>\\n\")])]),e._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"6\")]),s(\"br\")])]),s(\"p\",[e._v(\"配置文件中配置\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"# Eureka配置：配置服务注册中心地址\\neureka:\\n  client:\\n    service-url:\\n      defaultZone: http://localhost:7001/eureka/\\n\")])]),e._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),s(\"br\")])]),s(\"p\",[e._v(\"为主启动类添加注解，开启 Eureka Client\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"@SpringBootApplication\\n// @EnableEurekaClient 开启Eureka客户端注解，在服务启动后自动向注册中心注册服务\\n@EnableEurekaClient\\npublic class DeptProvider_8001 {\\n    public static void main(String[] args) {\\n        SpringApplication.run(DeptProvider_8001.class,args);\\n    }\\n}\\n\")])]),e._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"8\")]),s(\"br\")])]),s(\"p\",[e._v(\"启动服务端和客户端，访问 http://localhost:7001/ ，可以看到服务已经注册进来了。\"),s(\"br\"),e._v(\" \"),s(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/20210421190632749.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjY1NzQ1,size_16,color_FFFFFF,t_70#pic_left\",alt:\"\"}})]),e._v(\" \"),s(\"p\",[e._v(\"修改 Eureka 上的默认描述信息\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"# Eureka配置：配置服务注册中心地址\\neureka:\\n  client:\\n    service-url:\\n      defaultZone: http://localhost:7001/eureka/\\n  instance:\\n    instance-id: springcloud-provider-dept-8001 #修改Eureka上的默认描述信息\\n\")])]),e._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"7\")]),s(\"br\")])]),s(\"p\",[s(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/20210421190649639.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjY1NzQ1,size_16,color_FFFFFF,t_70#pic_left\",alt:\"\"}})]),e._v(\" \"),s(\"p\",[e._v(\"配置关于服务加载的监控信息\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"\\x3c!--actuator完善监控信息--\\x3e\\n<dependency>\\n <groupId>org.springframework.boot</groupId>\\n <artifactId>spring-boot-starter-actuator</artifactId>\\n</dependency>\\n\")])]),e._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),s(\"br\")])]),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"# info配置\\ninfo:\\n  # 项目名\\n  app.name: kuang-springcloud\\n  #公司名\\n  company.name: 阿里巴巴有限公司\\n\")])]),e._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"6\")]),s(\"br\")])]),s(\"p\",[e._v(\"刷新监控页，点击\"),s(\"br\"),e._v(\" \"),s(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/20210421141016208.png\",alt:\"\"}}),s(\"br\"),e._v(\"\\n会显示刚才配置的信息\"),s(\"br\"),e._v(\" \"),s(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/20210425203044266.png\",alt:\"\"}})]),e._v(\" \"),s(\"p\",[s(\"strong\",[e._v(\"自我保护机制\")])]),e._v(\" \"),s(\"p\",[e._v(\"默认情况下，如果 Eureka Server 在一定的 90s 内没有接收到某个微服务实例的心跳，会注销该实例。\")]),e._v(\" \"),s(\"p\",[e._v(\"但是，如果\"),s(\"code\",[e._v(\"短时间内丢失大量的实例心跳，便会触发eureka server的自我保护机制\")]),e._v(\"，比如在开发测试时，需要频繁地重启微服务实例，但是我们很少会把 eureka server 一起重启（因为在开发过程中不会修改 eureka 注册中心），当一分钟内收到的心跳数大量减少时，会触发该保护机制。可以在 eureka 管理界面看到 Renews threshold 和 Renews(last min)，当后者（最后一分钟收到的心跳数）小于前者（心跳阈值）的时候，触发保护机制，会出现红色的警告：\"),s(\"code\",[e._v(\"EMERGENCY!EUREKA MAY BE INCORRECTLY CLAIMING INSTANCES ARE UP WHEN THEY'RE NOT.RENEWALS ARE LESSER THAN THRESHOLD AND HENCE THE INSTANCES ARE NOT BEGING EXPIRED JUST TO BE SAFE.\")]),e._v(\"从警告中可以看到，eureka 认为虽然收不到实例的心跳，但它认为实例还是健康的，eureka 会保护这些实例，不会把它们从注册表中删掉。\")]),e._v(\" \"),s(\"p\",[e._v(\"Eureka 自我保护机制是为了防止误杀服务而提供的一个机制。当个别客户端出现心跳失联时，则认为是客户端的问题，剔除掉客户端；当 Eureka 捕获到大量的心跳失败时，则认为可能是网络问题，进入自我保护机制；当客户端心跳恢复时，Eureka 会自动退出自我保护机制。\")]),e._v(\" \"),s(\"p\",[e._v(\"如果在保护期内刚好这个服务提供者非正常下线了，此时服务消费者就会拿到一个无效的服务实例，即会调用失败。对于这个问题需要服务消费者端要有一些容错机制，如重试，断路器等。\")]),e._v(\" \"),s(\"p\",[e._v(\"开发环境下建议关闭\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"eureka.server.enable-self-preservation=false\\n\")])]),e._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),s(\"br\")])]),s(\"p\",[s(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/20210421190721179.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjY1NzQ1,size_16,color_FFFFFF,t_70#pic_left\",alt:\"\"}})]),e._v(\" \"),s(\"p\",[s(\"strong\",[e._v(\"注册进来的微服务，获取一些消息（团队开发会用到）\")])]),e._v(\" \"),s(\"p\",[e._v(\"DeptController.java 新增一个方法\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('/**\\n * DiscoveryClient 可以用来获取一些配置的信息，得到具体的微服务！\\n */\\n@Autowired\\nprivate DiscoveryClient client;\\n\\n/**\\n * 获取一些注册进来的微服务的信息~，\\n *\\n * @return\\n */\\n@GetMapping(\"/dept/discovery\")\\npublic Object discovery() {\\n    // 获取微服务列表的清单\\n    List<String> services = client.getServices();\\n    System.out.println(\"discovery=>services:\" + services);\\n    // 得到一个具体的微服务信息,通过具体的微服务id，applicaioinName；\\n    List<ServiceInstance> instances = client.getInstances(\"SPRINGCLOUD-PROVIDER-DEPT\");\\n    for (ServiceInstance instance : instances) {\\n        System.out.println(\\n                instance.getHost() + \"\\\\t\" + // 主机名称\\n                        instance.getPort() + \"\\\\t\" + // 端口号\\n                        instance.getUri() + \"\\\\t\" + // uri\\n                        instance.getServiceId() // 服务id\\n        );\\n    }\\n    return this.client;\\n}\\n')])]),e._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"15\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"16\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"17\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"18\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"19\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"20\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"21\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"22\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"23\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"24\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"25\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"26\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"27\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"28\")]),s(\"br\")])]),s(\"p\",[s(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/20210421141827108.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjY1NzQ1,size_16,color_FFFFFF,t_70\",alt:\"\"}}),s(\"br\"),e._v(\"\\n主启动类中加上 @EnableDiscoveryClient 注解开启\")]),e._v(\" \"),s(\"p\",[e._v(\"结果：\"),s(\"br\"),e._v(\" \"),s(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/202104211419103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjY1NzQ1,size_16,color_FFFFFF,t_70\",alt:\"\"}}),s(\"br\"),e._v(\" \"),s(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/20210421141914833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjY1NzQ1,size_16,color_FFFFFF,t_70\",alt:\"\"}})]),e._v(\" \"),s(\"h3\",{attrs:{id:\"_2-4-eureka-集群\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-4-eureka-集群\"}},[e._v(\"#\")]),e._v(\" 2.4 Eureka 集群\")]),e._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/20210421142003414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjY1NzQ1,size_16,color_FFFFFF,t_70\",alt:\"\"}}),s(\"br\"),e._v(\"\\n新建两个 moudle（springcloud-eureka-7002、springcloud-eureka-7003），导入和 7001 相同依赖\")]),e._v(\" \"),s(\"p\",[e._v(\"由于本机使用的全是 localhost 或 127.0.0.1，修改\"),s(\"code\",[e._v(\"C:\\\\Windows\\\\System32\\\\drivers\\\\etc\")]),e._v(\"的 hosts 文件\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"127.0.0.1 eureka7001.com\\n127.0.0.1 eureka7002.com\\n127.0.0.1 eureka7003.com\\n\")])]),e._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),s(\"br\")])]),s(\"p\",[s(\"code\",[e._v(\"访问eureka7001.com的时候，会解析成127.0.0.1，也就是本机，只是模拟成3台服务器。\")])]),e._v(\" \"),s(\"p\",[e._v(\"修改 3 个模块的配置文件，7001 的 application.yml\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"server:\\n  port: 7001\\n\\n#Eureka配置\\neureka:\\n  instance:\\n    hostname: eureka7001.com #这里改成域名\\n  client:\\n    register-with-eureka: false #表示是否向 Eureka 注册中心注册自己(这个模块本身是服务器,所以不需要)\\n    fetch-registry: false #fetch-registry如果为false,则表示自己为注册中心\\n    service-url: #监控页面~\\n      #重写Eureka的默认端口以及访问路径 ---\\x3ehttp://localhost:7001/eureka/\\n      # 单机： defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/\\n      # 集群（关联）：7001关联7002、7003\\n      defaultZone: http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/\\n\")])]),e._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"15\")]),s(\"br\")])]),s(\"p\",[e._v(\"7002 的 application.yml\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"server:\\n  port: 7002\\n\\n#Eureka配置\\neureka:\\n  instance:\\n    hostname: eureka7002.com #Eureka服务端的实例名字\\n  client:\\n    register-with-eureka: false #表示是否向 Eureka 注册中心注册自己(这个模块本身是服务器,所以不需要)\\n    fetch-registry: false #fetch-registry如果为false,则表示自己为注册中心\\n    service-url: #监控页面~\\n      #重写Eureka的默认端口以及访问路径 ---\\x3ehttp://localhost:7001/eureka/\\n      # 单机： defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/\\n      # 集群（关联）：7002关联7001、7003\\n      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7003.com:7003/eureka/\\n\")])]),e._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"15\")]),s(\"br\")])]),s(\"p\",[e._v(\"由于使用了集群，也就相当于现在有 3 个 Eureka Server 了，所以需要修改服务提供者 8001 的注册地址\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"# Eureka配置：配置服务注册中心地址\\neureka:\\n  client:\\n    service-url:\\n      # 注册中心地址7001-7003，把所以Eureka Server都写进来，会向3个服务端注册此服务\\n      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/\\n  instance:\\n    instance-id: springcloud-provider-dept-8001 #修改Eureka上的默认描述信息\\n\")])]),e._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[e._v(\"8\")]),s(\"br\")])]),s(\"p\",[e._v(\"启动监控画面\"),s(\"br\"),e._v(\" \"),s(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/20210421142933850.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjY1NzQ1,size_16,color_FFFFFF,t_70\",alt:\"\"}})]),e._v(\" \"),s(\"h3\",{attrs:{id:\"_2-5-eureka-和-zookeeper-对比\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-5-eureka-和-zookeeper-对比\"}},[e._v(\"#\")]),e._v(\" 2.5 Eureka 和 Zookeeper 对比\")]),e._v(\" \"),s(\"p\",[e._v(\"RDBMS (MySQL\\\\Oracle\\\\sqlServer) ===> ACID\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"A (Atomicity) 原子性\")]),e._v(\" \"),s(\"li\",[e._v(\"C (Consistency) 一致性\")]),e._v(\" \"),s(\"li\",[e._v(\"I (Isolation) 隔离性\")]),e._v(\" \"),s(\"li\",[e._v(\"D (Durability) 持久性\")])]),e._v(\" \"),s(\"p\",[e._v(\"NoSQL (Redis\\\\MongoDB) ===> CAP\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"C (Consistency) 强一致性\")]),e._v(\" \"),s(\"li\",[e._v(\"A (Availability) 可用性\")]),e._v(\" \"),s(\"li\",[e._v(\"P (Partition tolerance) 分区容错性\")])]),e._v(\" \"),s(\"p\",[s(\"strong\",[e._v(\"CAP 只能三选二，做不到三个都保证：CA、AP、CP\")])]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"一个分布式系统不可能同时很好的满足一致性，可用性和分区容错性这三个需求\")]),e._v(\" \"),s(\"li\",[e._v(\"根据 CAP 原理，将 NoSQL 数据库分成了满足 CA 原则，满足 CP 原则和满足 AP 原则三大类\")]),e._v(\" \"),s(\"li\",[e._v(\"CA：单点集群，满足一致性，可用性的系统，通常可扩展性较差\")]),e._v(\" \"),s(\"li\",[e._v(\"CP：满足一致性，分区容错的系统，通常性能不是特别高\")]),e._v(\" \"),s(\"li\",[e._v(\"AP：满足可用性，分区容错的系统，通常可能对一致性要求低一些\")])]),e._v(\" \"),s(\"p\",[s(\"strong\",[e._v(\"作为分布式服务注册中心，Eureka 比 Zookeeper 好在哪里？\")])]),e._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[e._v(\"Zookeeper 保证的是 CP\")]),e._v(\" —> 满足一致性，分区容错的系统，通常性能不是特别高\")]),e._v(\" \"),s(\"li\",[s(\"code\",[e._v(\"Eureka 保证的是 AP\")]),e._v(\" —> 满足可用性，分区容错的系统，通常可能对一致性要求低一些\")])]),e._v(\" \"),s(\"p\",[s(\"strong\",[e._v(\"Zookeeper 保证的是 CP\")])]),e._v(\" \"),s(\"p\",[e._v(\"当向注册中心查询服务列表时，我们可以容忍注册中心返回的是几分钟以前的注册信息，但不能接收服务直接 down 掉不可用。也就是说，\"),s(\"code\",[e._v(\"服务注册功能对可用性的要求要高于一致性\")]),e._v(\"。但 zookeeper 会出现这样一种情况，当 master 节点因为网络故障与其他节点失去联系时，剩余节点会重新进行 leader 选举。问题在于，选举 leader 的时间太长，30-120s，且选举期间整个 zookeeper 集群是不可用的，这就导致在选举期间注册服务瘫痪。在云部署的环境下，因为网络问题使得 zookeeper 集群失去 master 节点是较大概率发生的事件，虽然服务最终能够恢复，但是，漫长的选举时间导致注册长期不可用，是不可容忍的。\")]),e._v(\" \"),s(\"p\",[s(\"strong\",[e._v(\"Eureka 保证的是 AP\")])]),e._v(\" \"),s(\"p\",[e._v(\"Eureka 看明白了这一点，因此在设计时就\"),s(\"code\",[e._v(\"优先保证可用性\")]),e._v(\"。Eureka 各个节点都是平等的，几个节点挂掉不会影响正常节点的工作，剩余的节点依然可以提供注册和查询服务。而 Eureka 的客户端在向某个 Eureka 注册时，如果发现连接失败，则会自动切换至其他节点，只要有一台 Eureka 还在，就能保住注册服务的可用性，只不过查到的信息可能不是最新的，除此之外，Eureka 还有之中自我保护机制，如果在 15 分钟内超过 85% 的节点都没有正常的心跳，那么 Eureka 就认为客户端与注册中心出现了网络故障，此时会出现以下几种情况：\")]),e._v(\" \"),s(\"ul\",[s(\"li\",[e._v(\"Eureka 不在从注册列表中移除因为长时间没收到心跳而应该过期的服务\")]),e._v(\" \"),s(\"li\",[e._v(\"Eureka 仍然能够接受新服务的注册和查询请求，但是不会被同步到其他节点上 (即保证当前节点依然可用)\")]),e._v(\" \"),s(\"li\",[e._v(\"当网络稳定时，当前实例新的注册信息会被同步到其他节点中\")])]),e._v(\" \"),s(\"p\",[e._v(\"因此，Eureka 可以很好的应对因网络故障导致部分节点失去联系的情况，而不会像 zookeeper 那样使整个注册服务瘫痪\")])])}),[],!1,null,null,null);s.default=r.exports}}]);","extractedComments":[]}